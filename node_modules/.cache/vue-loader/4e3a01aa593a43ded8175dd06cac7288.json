{"remainingRequest":"/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/src/views/Introduccion.vue?vue&type=template&id=5e4b758b&lang=pug&","dependencies":[{"path":"/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/src/views/Introduccion.vue","mtime":1747358854520},{"path":"/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U1_Estimulacion_Temprana/U1_Estimulacion_Temprana/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}